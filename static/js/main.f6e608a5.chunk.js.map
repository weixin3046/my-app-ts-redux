{"version":3,"sources":["constants/chains.ts","assets/images/logo.svg","connection/index.ts","constants/networks.ts","connection/utils.ts","state/connection/reducer.ts","state/hooks.ts","state/user/reducer.ts","components/User/index.tsx","components/Header/index.tsx","components/Layout/index.tsx","hooks/useEagerlyConnect.ts","hooks/useOrderedConnections.ts","components/Web3Provider/index.tsx","components/WebConfigProvider/index.tsx","pages/Explore/index.tsx","assets/images/banner.png","components/Button/index.tsx","components/Content/index.tsx","utils/userAgent.ts","components/Banner/index.tsx","components/Cooperation/Cooperation.tsx","apollographql/home.ts","assets/images/arrow-left-circle.svg","assets/images/arrow-right-circle.svg","assets/images/no-image.svg","hooks/useGetNftUri.ts","components/ContractCard/DefaultCard.tsx","components/Featured/index.tsx","assets/images/home-fast.svg","assets/images/home-private.svg","assets/images/home-sacure.svg","assets/images/home-total.svg","components/Private/index.tsx","assets/images/rewards.svg","components/Rewards/index.tsx","components/TopCollections/index.tsx","pages/Home/index.tsx","pages/RoutesPage.tsx","reportWebVitals.ts","state/application/reducer.ts","global/actions.ts","state/global/actions.ts","state/transactions/reducer.ts","state/index.ts","index.tsx"],"names":["SupportedChainId","FINDORA","FINDORA_TESTNET","Object","values","filter","id","ConnectionType","RPC_URLS","onError","error","console","debug","initializeConnector","actions","Network","urlMap","defaultChainId","networkConnection","connector","hooks","type","NETWORK","MetaMask","injectedConnection","INJECTED","CONNECTIONS","getConnection","c","Connector","connection","find","Error","initialState","errorByConnectionType","undefined","connectionSlice","createSlice","name","reducers","updateConnectionError","state","payload","connectionType","useAppDispatch","useDispatch","useAppSelector","useSelector","currentTimestamp","Date","getTime","matchesDarkMode","selectedWallet","selectedWalletBackfilled","userLocale","userDarkMode","timestamp","userSlice","updateSelectedWallet","wallet","updateUserLocale","action","updateUserDarkMode","updateMatchesDarkMode","WALLET_VIEWS","UserPage","dispatch","useWeb3React","account","chainId","useState","setVisible","setPendingConnector","setWalletView","tryActivation","useCallback","activate","message","onClick","src","style","width","size","background","verticalAlign","Header","styled","div","HeaderFrame","Title","a","AppIcon","HeaderLinks","HeaderControls","HeaderElement","HeaderPage","selectChange","value","window","location","href","Logo","alt","className","overflowedIndicator","items","label","key","border","mode","item","keyPath","domEvent","Content","Layout","Footer","WebLayout","children","minHeight","textAlign","connect","connectEagerly","SELECTABLE_WALLETS","Web3Provider","selectedConnection","user","useEffect","useEagerlyConnect","connections","useMemo","orderedConnectionTypes","push","map","useOrderedConnections","connectors","isMetaMask","getConnectionName","join","WebConfigProvider","color","darkColor","dark","language","ConfigProvider","config","theme","locale","antdZhCN","antdEnUS","ExplorePage","ButtonBase","Button","ButtonPrimary","ButtonDefault","parser","UAParser","navigator","userAgent","getDevice","isMobile","getResult","Introduce","props","h2","Paragraph","BannerPage","align","justify","xl","md","wrap","justifyContent","BannerImage","preview","Typography","Cooperation","Email","EmailButton","CooperationPage","margin","opacity","paddingTop","paddingBottom","bordered","placeholder","icon","ArrowUpOutlined","fontSize","FeaturedGql","gql","getNftUri","uri","Promise","resolve","reject","axios","get","then","res","image","data","replace","catch","Meta","Card","MetaTitle","ContractName","AvatarName","MyAvatar","DefauldCardPage","AvatarSize","ImageSize","height","useRequest","run","loading","useGetNftUri","to","address","hoverable","cover","spinning","overflow","NoImage","fallback","avatar","UserOutlined","title","compiler","description","ellipsis","rows","LaunchpadWrap","FeaturedPage","useQuery","log","afterChange","currentSlide","arrows","nextArrow","ArrowLeftCircle","prevArrow","ArrowRightCircle","dots","slidesToShow","slidesToScroll","nftcontracts","padding","ListWrap","PrivatePage","Avatar","HomeTotal","HomeFast","HomePrivate","HomeSacure","grid","gutter","xs","sm","lg","xxl","dataSource","renderItem","Item","RewardsPage","span","float","RewardsImage","RowBetween","Rank","ThickText","ThinText","HandleButton","TopCollectionsPage","index","HomaPage","client","ApolloClient","cache","InMemoryCache","RoutesPage","ApolloProvider","path","element","ApplicationModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateVersion","createAction","applicationSlice","openModal","popupList","updateChainId","setOpenModal","now","transactionSlice","addTransaction","transactions","from","hash","info","txs","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","extraReducers","builder","addCase","keys","forEach","chainTransactions","store","configureStore","reducer","application","setupListeners","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f6e608a5.chunk.js","sourcesContent":["export enum SupportedChainId {\n  FINDORA = 2152,\n  FINDORA_TESTNET = 2153,\n}\n\nexport const CHAIN_IDS_TO_NAMES = {\n  [SupportedChainId.FINDORA]: \"findora\",\n  [SupportedChainId.FINDORA_TESTNET]: \"findora_testnet\",\n};\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS: SupportedChainId[] = Object.values(\n  SupportedChainId\n).filter((id) => typeof id === \"number\") as SupportedChainId[];\n\nexport const All_FINDORA_CHAIN_IDS = [\n  SupportedChainId.FINDORA,\n  SupportedChainId.FINDORA_TESTNET,\n];\n\nexport type SupporteDevChainId = typeof All_FINDORA_CHAIN_IDS[number];\n","export default __webpack_public_path__ + \"static/media/logo.ef4fe0f9.svg\";","import { initializeConnector, Web3ReactHooks } from \"@web3-react/core\";\nimport { MetaMask } from \"@web3-react/metamask\";\nimport { Network } from \"@web3-react/network\";\nimport { Connector } from \"@web3-react/types\";\nimport { RPC_URLS } from \"constants/networks\";\n\nexport enum ConnectionType {\n  INJECTED = \"INJECTED\",\n  NETWORK = \"NETWORK\",\n}\n\nexport interface Connection {\n  connector: Connector;\n  hooks: Web3ReactHooks;\n  type: ConnectionType;\n}\n\nfunction onError(error: Error) {\n  console.debug(`web3-react error: ${error}`);\n}\n\nconst [web3Network, web3NetworkHooks] = initializeConnector<Network>(\n  (actions) => new Network({ actions, urlMap: RPC_URLS, defaultChainId: 2152 })\n);\nexport const networkConnection: Connection = {\n  connector: web3Network,\n  hooks: web3NetworkHooks,\n  type: ConnectionType.NETWORK,\n};\n\nconst [web3Injected, web3InjectedHooks] = initializeConnector<MetaMask>(\n  (actions) => new MetaMask({ actions, onError })\n);\nexport const injectedConnection: Connection = {\n  connector: web3Injected,\n  hooks: web3InjectedHooks,\n  type: ConnectionType.INJECTED,\n};\n\n// const [web3GnosisSafe, web3GnosisSafeHooks] = initializeConnector<GnosisSafe>(\n//   (actions) => new GnosisSafe({ actions })\n// );\n\n// export const gnosisSafeConnection: Connection = {\n//   connector: web3GnosisSafe,\n//   hooks: web3GnosisSafeHooks,\n//   type: ConnectionType.GNOSIS_SAFE,\n// };\n// TODO:新版钱包\n// export const [web3Injected, web3InjectedHooks] = initializeConnector<MetaMask>(\n//   (actions) => new MetaMask({ actions, onError })\n// );\n// export const injectedConnection: Connection = {\n//   connector: web3Injected,\n//   hooks: web3InjectedHooks,\n//   type: ConnectionType.INJECTED,\n// };\n\n// export const [web3WalletConnect, web3WalletConnectHooks] =\n//   initializeConnector<WalletConnect>(\n//     (actions) =>\n//       new WalletConnect({\n//         actions,\n//         options: {\n//           rpc: RPC_URLS,\n//           qrcode: true,\n//         },\n//         onError,\n//       })\n//   );\n// export const walletConnectConnection: Connection = {\n//   connector: web3WalletConnect,\n//   hooks: web3WalletConnectHooks,\n//   type: ConnectionType.WALLET_CONNECT,\n// };\n\n// export const [web3CoinbaseWallet, web3CoinbaseWalletHooks] =\n//   initializeConnector<CoinbaseWallet>(\n//     (actions) =>\n//       new CoinbaseWallet({\n//         actions,\n//         options: {\n//           url: RPC_URLS[SupportedChainId.FINDORA],\n//           appName: \"Hitall\",\n//         },\n//         onError,\n//       })\n//   );\n// export const coinbaseWalletConnection: Connection = {\n//   connector: web3CoinbaseWallet,\n//   hooks: web3CoinbaseWalletHooks,\n//   type: ConnectionType.COINBASE_WALLET,\n// };\n\n// export const [web3Network, web3NetworkHooks] = initializeConnector<Network>(\n//   (actions) => new Network({ actions, urlMap: RPC_URLS, defaultChainId: 1 })\n// );\n// export const networkConnection: Connection = {\n//   connector: web3Network,\n//   hooks: web3NetworkHooks,\n//   type: ConnectionType.NETWORK,\n// };\n","import { SupportedChainId } from \"./chains\";\n\n/**\n * These are the network URLs used by the interface when there is not another available source of chain data\n */\nexport const RPC_URLS: { [key in SupportedChainId]: string } = {\n  [SupportedChainId.FINDORA]: `https://prod-mainnet.prod.findora.org:8545`,\n  [SupportedChainId.FINDORA_TESTNET]: `https://prod-testnet.prod.findora.org:8545/`,\n};\n","import { Connector } from \"@web3-react/types\";\nimport {\n  ConnectionType,\n  injectedConnection,\n  networkConnection,\n} from \"connection\";\n\nconst CONNECTIONS = [injectedConnection, networkConnection];\n\nexport function getConnection(c: Connector | ConnectionType) {\n  if (c instanceof Connector) {\n    const connection = CONNECTIONS.find(\n      (connection) => connection.connector === c\n    );\n    if (!connection) {\n      throw Error(\"unsupported connector\");\n    }\n    return connection;\n  } else {\n    switch (c) {\n      case ConnectionType.INJECTED:\n        return injectedConnection;\n      case ConnectionType.NETWORK:\n        return networkConnection;\n    }\n  }\n}\n\nexport function getConnectionName(\n  connectionType: ConnectionType,\n  isMetaMask?: boolean\n) {\n  switch (connectionType) {\n    case ConnectionType.INJECTED:\n      return isMetaMask ? \"MetaMask\" : \"Injected\";\n    case ConnectionType.NETWORK:\n      return \"Network\";\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { ConnectionType } from \"connection\";\n\nexport interface ConnectionState {\n  errorByConnectionType: Record<ConnectionType, string | undefined>;\n}\n\nexport const initialState: ConnectionState = {\n  errorByConnectionType: {\n    [ConnectionType.INJECTED]: undefined,\n    [ConnectionType.NETWORK]: undefined,\n  },\n};\n\nconst connectionSlice = createSlice({\n  name: \"connection\",\n  initialState,\n  reducers: {\n    updateConnectionError(\n      state,\n      {\n        payload: { connectionType, error },\n      }: {\n        payload: { connectionType: ConnectionType; error: string | undefined };\n      }\n    ) {\n      state.errorByConnectionType[connectionType] = error;\n    },\n  },\n});\n\nexport const { updateConnectionError } = connectionSlice.actions;\nexport default connectionSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, AppState } from \"state\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { ConnectionType } from \"connection\";\nimport { SupportedLocale } from \"constants/locales\";\nconst currentTimestamp = () => new Date().getTime();\n\nexport interface UserState {\n  // We want the user to be able to define which wallet they want to use, even if there are multiple connected wallets via web3-react.\n  // If a user had previously connected a wallet but didn't have a wallet override set (because they connected prior to this field being added),\n  // we want to handle that case by backfilling them manually. Once we backfill, we set the backfilled field to `true`.\n  // After some period of time, our active users will have this property set so we can likely remove the backfilling logic.\n  selectedWalletBackfilled: boolean;\n  selectedWallet?: ConnectionType;\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\n  userLocale: SupportedLocale | null;\n  timestamp: number;\n  matchesDarkMode: boolean; // whether the dark mode media query matches\n}\n\nexport const initialState: UserState = {\n  matchesDarkMode: false,\n  selectedWallet: undefined,\n  selectedWalletBackfilled: false,\n  userLocale: null,\n  userDarkMode: null,\n  timestamp: currentTimestamp(),\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    updateSelectedWallet(state, { payload: { wallet } }) {\n      state.selectedWallet = wallet;\n      state.selectedWalletBackfilled = true;\n    },\n    updateUserLocale(state, action) {\n      state.userLocale = action.payload.userLocale;\n      state.timestamp = currentTimestamp();\n    },\n    updateUserDarkMode(state, action) {\n      state.userDarkMode = action.payload.userDarkMode;\n      state.timestamp = currentTimestamp();\n    },\n    updateMatchesDarkMode(state, action) {\n      state.matchesDarkMode = action.payload.matchesDarkMode;\n      state.timestamp = currentTimestamp();\n    },\n  },\n});\n\nexport const {\n  updateMatchesDarkMode,\n  updateSelectedWallet,\n  updateUserLocale,\n  updateUserDarkMode,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import \"./index.css\";\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Connector } from \"@web3-react/types\";\nimport { Avatar, Button, Image } from \"antd\";\nimport { injectedConnection } from \"connection\";\nimport { getConnection } from \"connection/utils\";\nimport { useCallback, useState } from \"react\";\nimport { updateConnectionError } from \"state/connection/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { updateSelectedWallet } from \"state/user/reducer\";\n\n// type MenuItem = Required<MenuProps>[\"items\"][number];\n// function getItem(\n//   label: React.ReactNode,\n//   key: React.Key,\n//   disabled?: boolean,\n//   icon?: React.ReactNode,\n//   children?: MenuItem[],\n//   type?: \"group\"\n// ): MenuItem {\n//   return {\n//     key,\n//     disabled,\n//     icon,\n//     children,\n//     label,\n//     type,\n//   } as MenuItem;\n// }\n\nconst WALLET_VIEWS = {\n  OPTIONS: \"options\",\n  ACCOUNT: \"account\",\n  PENDING: \"pending\",\n};\n\nexport default function UserPage() {\n  const dispatch = useAppDispatch();\n  const { account, chainId } = useWeb3React();\n  const [error] = useState(undefined);\n  const [, setVisible] = useState(false);\n  const [, setPendingConnector] = useState<Connector | undefined>();\n  const [, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  // const navigate = useNavigate();\n  const handleOnCLickConnectWallet = () => {\n    setVisible(true);\n  };\n\n  // const items = [\n  //   getItem(\"My Items\", \"items\"),\n  //   getItem(\"Favorites\", \"favorites\"),\n  //   getItem(\"My collections\", \"collections\"),\n  //   // getItem('Settings', 'settings'),\n  //   // getItem(\n  //   //   <RowBetween>\n  //   //     <ButtonLink to=\"./\" type=\"link\">\n  //   //       Night Mode\n  //   //     </ButtonLink>\n  //   //     <Switch checked={!!mode} onChange={handleModeChange} />\n  //   //   </RowBetween>,\n  //   //   'switch',\n  //   // ),\n  // ];\n  // const onSwitchNav: MenuProps[\"onClick\"] = (e) => {\n  //   if (e.key === \"switch\") return;\n  //   if (e.key === \"account\") return;\n  //   setVisible(false);\n  //   navigate(`/user/${e.key}`);\n  // };\n\n  const tryActivation = useCallback(\n    async (connector: Connector) => {\n      const connectionType = getConnection(connector).type;\n      try {\n        setPendingConnector(connector);\n        setWalletView(WALLET_VIEWS.PENDING);\n        dispatch(updateConnectionError({ connectionType, error: undefined }));\n        await connector.activate();\n        dispatch(updateSelectedWallet({ wallet: connectionType }));\n      } catch (error: any) {\n        console.debug(`web3-react connection error: ${error}`);\n        dispatch(\n          updateConnectionError({ connectionType, error: error.message })\n        );\n      }\n    },\n    [dispatch]\n  );\n  if (!chainId) {\n    return null;\n  } else if (error) {\n    return <div>error</div>;\n  } else if (account) {\n    return (\n      <Avatar\n        onClick={handleOnCLickConnectWallet}\n        src={<Image src=\"\" style={{ width: 36 }} />}\n        size={36}\n        style={{\n          background: \"linear-gradient(90deg, #00E087 0.18%, #00AAFF 100.18%)\",\n          verticalAlign: \"middle\",\n        }}\n      >\n        U\n      </Avatar>\n    );\n  } else {\n    return (\n      <Button\n        type=\"text\"\n        onClick={() => tryActivation(injectedConnection.connector)}\n      >\n        {\" \"}\n        Connect Wallet\n      </Button>\n    );\n  }\n}\n","import { Menu } from \"antd\";\nimport Logo from \"assets/images/logo.svg\";\nimport User from \"components/User\";\nimport { AlignJustify } from \"react-feather\";\nimport styled from \"styled-components\";\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n`;\n\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 120px auto 1fr;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  width: 100%;\n  padding: 10px;\n  transition: background-position 0.1s, box-shadow 0.1s;\n  background-blend-mode: hard-light; //背景混合模式\n  max-width: 1200px;\n`;\n\nconst Title = styled.a`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 12px;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst AppIcon = styled.div`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n\n  position: relative;\n`;\n\nconst HeaderLinks = styled.div`\n  justify-self: start;\n  width: fit-content;\n  align-items: center;\n`;\n\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n`;\nconst HeaderElement = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:not(:first-child) {\n    margin-left: 0.5em;\n  }\n`;\n\nconst HeaderPage = () => {\n  const selectChange = (value: any) => {\n    switch (value) {\n      case \"home\":\n        window.location.href = \"/\";\n        break;\n      case \"/Explore\":\n        window.location.href = \"/Explore\";\n        break;\n      case \"/Rankings\":\n        window.location.href = \"/Rankings\";\n        break;\n      case \"/Rewards\":\n        window.location.href = \"/Rewards\";\n        break;\n    }\n  };\n  const items = [\n    { label: \"Explore\", key: \"/Explore\" },\n    { label: \"Rankings\", key: \"/Rankings\" },\n  ];\n  return (\n    <Header>\n      <HeaderFrame>\n        <Title>\n          <AppIcon>\n            <img\n              src={Logo}\n              alt=\"Hitall\"\n              className=\"logo\"\n              onClick={() => {\n                selectChange(\"home\");\n              }}\n            />\n          </AppIcon>\n        </Title>\n        <HeaderLinks>\n          <Menu\n            overflowedIndicator={<AlignJustify size={24} />}\n            items={items}\n            style={{ border: \"none\" }}\n            mode=\"horizontal\"\n            onClick={function ({ item, key, keyPath, domEvent }) {\n              selectChange(key);\n            }}\n          />\n        </HeaderLinks>\n\n        <HeaderControls>\n          <HeaderElement>\n            {/* <SwitchLanguage /> */}\n            {/* <SwitchThemes /> */}\n            {/* <SwitchNetWork chainInfoKey={chainInfoKey} onClick={handleClick} /> */}\n            {/* <ConnectWallet /> */}\n            <User />\n          </HeaderElement>\n        </HeaderControls>\n      </HeaderFrame>\n    </Header>\n  );\n};\n\nexport default HeaderPage;\n","import \"./index.less\";\n\nimport { Layout } from \"antd\";\nimport Header from \"components/Header\";\nimport React from \"react\";\n\nconst { Content, Footer } = Layout;\ninterface WebLayoutProps {\n  children: React.ReactNode;\n}\n\nconst WebLayout = ({ children }: WebLayoutProps) => {\n  return (\n    <Layout className=\"layout\">\n      <Header />\n      <Content style={{ minHeight: \"800px\" }}>\n        <div className=\"site-layout-content\">{children}</div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        Ant Design ©2018 Created by Ant UED\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default WebLayout;\n","import { Connector } from \"@web3-react/types\";\nimport { Connection, networkConnection } from \"connection\";\nimport { getConnection } from \"connection/utils\";\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { updateSelectedWallet } from \"state/user/reducer\";\n\nasync function connect(connector: Connector) {\n  try {\n    if (connector.connectEagerly) {\n      await connector.connectEagerly();\n    } else {\n      await connector.activate();\n    }\n  } catch (error) {\n    console.debug(`web3-react eager connection error: ${error}`);\n  }\n}\n\nexport default function useEagerlyConnect() {\n  const dispatch = useAppDispatch();\n\n  const selectedWallet = useAppSelector((state) => state.user.selectedWallet);\n\n  let selectedConnection: Connection | undefined;\n  if (selectedWallet) {\n    try {\n      selectedConnection = getConnection(selectedWallet);\n    } catch {\n      dispatch(updateSelectedWallet({ wallet: undefined }));\n    }\n  }\n\n  useEffect(() => {\n    connect(networkConnection.connector);\n    if (selectedConnection) {\n      connect(selectedConnection.connector);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import { ConnectionType } from \"connection\";\nimport { getConnection } from \"connection/utils\";\nimport { useMemo } from \"react\";\nimport { useAppSelector } from \"state/hooks\";\n\nconst SELECTABLE_WALLETS = [ConnectionType.INJECTED];\n\nexport default function useOrderedConnections() {\n  const selectedWallet = useAppSelector((state) => state.user.selectedWallet);\n  return useMemo(() => {\n    const orderedConnectionTypes: ConnectionType[] = [];\n\n    // Always attempt to use to Gnosis Safe first, as we can't know if we're in a SafeContext.\n\n    // Add the `selectedWallet` to the top so it's prioritized, then add the other selectable wallets.\n    if (selectedWallet) {\n      orderedConnectionTypes.push(selectedWallet);\n    }\n    orderedConnectionTypes.push(\n      ...SELECTABLE_WALLETS.filter((wallet) => wallet !== selectedWallet)\n    );\n\n    // Add network connection last as it should be the fallback.\n    orderedConnectionTypes.push(ConnectionType.NETWORK);\n\n    return orderedConnectionTypes.map(getConnection);\n  }, [selectedWallet]);\n}\n","import { Web3ReactHooks, Web3ReactProvider } from \"@web3-react/core\";\nimport { Connector } from \"@web3-react/types\";\nimport { Connection } from \"connection\";\nimport { getConnectionName } from \"connection/utils\";\nimport useEagerlyConnect from \"hooks/useEagerlyConnect\";\nimport useOrderedConnections from \"hooks/useOrderedConnections\";\nimport { ReactNode, useMemo } from \"react\";\n\nexport default function Web3Provider({ children }: { children: ReactNode }) {\n  useEagerlyConnect();\n  const connections = useOrderedConnections();\n  const connectors: [Connector, Web3ReactHooks][] = connections.map(\n    ({ hooks, connector }) => [connector, hooks]\n  );\n\n  const key = useMemo(\n    () =>\n      connections\n        .map(({ type }: Connection) => getConnectionName(type))\n        .join(\"-\"),\n    [connections]\n  );\n\n  return (\n    <Web3ReactProvider connectors={connectors} key={key}>\n      {children}\n    </Web3ReactProvider>\n  );\n}\n","import { ConfigProvider } from \"antd\";\nimport antdEnUS from \"antd/lib/locale/en_US\";\nimport antdZhCN from \"antd/lib/locale/zh_CN\";\nimport { useState } from \"react\";\n\ninterface WebConfigProviderProps {\n  children: React.ReactNode;\n}\n\nexport default function WebConfigProvider({\n  children,\n}: WebConfigProviderProps) {\n  const [color] = useState({});\n  const [darkColor] = useState({});\n  const [dark] = useState(false);\n  const [language] = useState(true);\n  ConfigProvider.config({\n    theme: dark ? darkColor : color,\n  });\n\n  return (\n    <ConfigProvider locale={language ? antdZhCN : antdEnUS}>\n      {children}\n    </ConfigProvider>\n  );\n}\n","export default function ExplorePage() {\n  return <></>;\n}\n","export default __webpack_public_path__ + \"static/media/banner.1736eb80.png\";","import { Button } from \"antd\";\nimport styled from \"styled-components/macro\";\n\nexport const ButtonBase = styled(Button)`\n  font-weight: 600;\n  border-radius: 8px;\n  height: 76px;\n  font-size: 24px;\n  min-width: 240px;\n`;\n\nexport const ButtonPrimary = styled(ButtonBase)`\n  background-image: linear-gradient(\n    90deg,\n    rgb(0, 224, 135) 0.18%,\n    rgb(0, 170, 255) 100.18%\n  );\n  color: #fff;\n`;\n\nexport const ButtonDefault = styled(ButtonBase)`\n  background-image: linear-gradient(90deg, #00e087 0.18%, #00aaff 100.18%);\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  border: 1px #00e087 solid;\n  /* border-image: linear-gradient(90deg, #00e087 0.18%, #00aaff 100.18%) 1; */\n`;\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 30px;\n  padding-right: 30px;\n`;\n","import { UAParser } from \"ua-parser-js\";\n\nconst parser = new UAParser(window.navigator.userAgent);\nconst { type } = parser.getDevice();\n\nexport const userAgent = parser.getResult();\n\nexport const isMobile = type === \"mobile\" || type === \"tablet\";\n","import { Col, Image, Row, Space } from \"antd\";\nimport BannerImage from \"assets/images/banner.png\";\nimport { ButtonDefault, ButtonPrimary } from \"components/Button\";\nimport { Content } from \"components/Content\";\nimport styled from \"styled-components\";\nimport { isMobile } from \"utils/userAgent\";\n\nconst Introduce = styled.div`\n  /* padding-top: 100px; */\n\n  text-align: ${(props: { isMobile: boolean }) =>\n    props.isMobile ? \"center\" : \"\"};\n`;\nconst Title = styled.h2`\n  font-weight: 600;\n  line-height: 120%;\n  font-size: 60px;\n`;\n\nconst Paragraph = styled.div`\n  font-size: 24px;\n  line-height: 150%;\n  padding-bottom: 60px;\n`;\n\nexport default function BannerPage() {\n  return (\n    <Content>\n      <Row align=\"middle\" justify={\"center\"}>\n        <Col xl={12} md={24}>\n          <Introduce isMobile={isMobile}>\n            <Title>Create Your First Private NFT</Title>\n            <Paragraph>\n              Create the first private NFT belonging to you on findora to\n              realize private transfer between buyers and sellers\n            </Paragraph>\n            <div>\n              <Space\n                size={36}\n                wrap\n                align={\"center\"}\n                style={{ justifyContent: \"center\" }}\n              >\n                <ButtonPrimary>Import</ButtonPrimary>\n                <ButtonDefault>Explore</ButtonDefault>\n              </Space>\n            </div>\n          </Introduce>\n        </Col>\n        <Col xl={12} md={24}>\n          <Image src={BannerImage} preview={false}></Image>\n        </Col>\n      </Row>\n    </Content>\n  );\n}\n","import { ArrowUpOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst { Title, Paragraph } = Typography;\n\nconst Cooperation = styled.div`\n  background: linear-gradient(90deg, #00e087 0.18%, #00aaff 100.18%);\n  padding: 106px 0;\n`;\n\nconst Email = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #fff;\n  background: #fff;\n  height: 60px;\n  /* width: 587px; */\n  border-radius: 8px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst EmailButton = styled(Button)`\n  width: 48px;\n  height: 48px;\n  background: linear-gradient(90deg, #00e087 0.18%, #00aaff 100.18%);\n  border-radius: 6px;\n`;\n\nconst CooperationPage = () => {\n  return (\n    <Cooperation>\n      <Typography style={{ textAlign: \"center\" }}>\n        <Title style={{ color: \"#fff\" }}>MINT AND COOPERATION</Title>\n        <Paragraph\n          style={{\n            margin: \"0 auto\",\n            color: \"#fff\",\n            opacity: \"0.7\",\n            paddingTop: \"42px\",\n            paddingBottom: \"48px\",\n          }}\n        >\n          By submitting your email, you consent to receive emails from Hitall.\n          Be the first to get updates on the Hitall launch, the latest features,\n          and upcoming airdrops and events.\n        </Paragraph>\n        <Space>\n          <Email>\n            <Input\n              style={{ width: \"calc(100% - 60px)\" }}\n              bordered={false}\n              size={\"large\"}\n              placeholder=\"Email Address\"\n            />\n            <EmailButton\n              type=\"primary\"\n              icon={<ArrowUpOutlined style={{ fontSize: \"25px\" }} />}\n            ></EmailButton>\n          </Email>\n        </Space>\n      </Typography>\n    </Cooperation>\n  );\n};\n\nexport default CooperationPage;\n","import { gql } from \"@apollo/client\";\n\nexport const query = gql`\n  query CollectionInfo($collection: ID!) {\n    nftcontract(id: $collection) {\n      address\n      name\n      symbol\n      creator\n      uri\n    }\n  }\n`;\nexport const variables = {\n  collection: \"0xa4606025191b5ede06d1e0a3609b8f386e9bd908\",\n};\n\nexport const order = 101;\n\nexport const type = \"util\";\n\nexport const FeaturedGql = gql`\n  query MyQuery {\n    nftcontracts(orderDirection: desc, first: 30) {\n      name\n      uri\n      symbol\n      standard\n      saleCounts\n      saleAmounts\n      royalties\n      priceCeiling\n      id\n      floorPrice\n      fees\n      avgPrice\n      address\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/arrow-left-circle.e0358dd2.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right-circle.aa3dcc6d.svg\";","export default __webpack_public_path__ + \"static/media/no-image.6931f8b6.svg\";","import { useRequest } from \"ahooks\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\nfunction getNftUri(uri: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(uri)\n      .then((res: any) => {\n        const image = res.data.image.replace(\n          \"ipfs://\",\n          \"https://ipfs.io/ipfs/\"\n        );\n        resolve({\n          ...res.data,\n          image,\n        });\n      })\n      .catch((error: any) => reject());\n  });\n}\n\nexport default function useGetNftUri(uri: string) {\n  const { run, error, loading, data } = useRequest(getNftUri);\n\n  useEffect(() => {\n    if (uri) {\n      run(uri);\n    }\n  }, [uri, run]);\n  return { data, error, loading };\n}\n","import \"./inddex.less\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { Avatar, Card, Image, Space, Spin, Typography } from \"antd\";\nimport NoImage from \"assets/images/no-image.svg\";\nimport useGetNftUri from \"hooks/useGetNftUri\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nconst { Meta } = Card;\nconst { Paragraph } = Typography;\n\nconst MetaTitle = styled.div`\n  text-align: center;\n`;\nconst ContractName = styled.div`\n  font-weight: 600;\n  font-size: 18px;\n`;\nconst AvatarName = styled.div`\n  font-weight: 300;\n  font-size: 14px;\n`;\n\nconst MyAvatar = styled.div`\n  float: 1;\n`;\n\ninterface DefauldCardPageProps {\n  item: any;\n  AvatarSize?: number;\n  ImageSize?: number;\n  height?: number;\n}\n\nexport default function DefauldCardPage({\n  item,\n  AvatarSize,\n  ImageSize,\n  height,\n}: DefauldCardPageProps) {\n  const { data, loading } = useGetNftUri(item.uri);\n  return (\n    <>\n      <Link to={\"/Explore/\" + item.address} key={item.id}>\n        <Card\n          style={{ height: height + \"px\" }}\n          className=\"contract-card\"\n          hoverable\n          cover={\n            <Spin spinning={loading}>\n              <div style={{ height: ImageSize + \"px\", overflow: \"hidden\" }}>\n                <Image\n                  width={\"100%\"}\n                  preview={false}\n                  src={data?.image || NoImage}\n                  fallback={NoImage}\n                  placeholder={true}\n                />\n              </div>\n            </Spin>\n          }\n        >\n          <Meta\n            avatar={\n              <MyAvatar>\n                <Avatar\n                  size={AvatarSize || 50}\n                  src={item.avatar}\n                  icon={<UserOutlined />}\n                />\n              </MyAvatar>\n            }\n            title={\n              <MetaTitle>\n                <ContractName>{item?.name}</ContractName>\n                <AvatarName>\n                  <Space>\n                    <span>By</span>\n                    <span style={{ color: \"#00E087\" }}>{data?.compiler}</span>\n                  </Space>\n                </AvatarName>\n              </MetaTitle>\n            }\n            description={\n              <Paragraph ellipsis={{ rows: 4 }}>{data?.description}</Paragraph>\n            }\n          ></Meta>\n        </Card>\n      </Link>\n    </>\n  );\n}\n","import \"./index.less\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { Carousel } from \"antd\";\nimport { FeaturedGql } from \"apollographql/home\";\nimport ArrowLeftCircle from \"assets/images/arrow-left-circle.svg\";\nimport ArrowRightCircle from \"assets/images/arrow-right-circle.svg\";\nimport { ButtonDefault } from \"components/Button\";\nimport { Content } from \"components/Content\";\nimport DefauldCardPage from \"components/ContractCard/DefaultCard\";\nimport styled from \"styled-components\";\nimport { isMobile } from \"utils/userAgent\";\n\nconst LaunchpadWrap = styled.div`\n  padding-top: 105px;\n  padding-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  font-weight: 600;\n  font-size: 40px;\n  text-align: center;\n  padding: 50px 0;\n`;\n\nexport default function FeaturedPage() {\n  // const [list, setList] = useState<any[]>();\n  const { data } = useQuery(FeaturedGql);\n\n  const onChange = (currentSlide: number) => {\n    console.log(currentSlide);\n  };\n  console.log(data);\n  return (\n    <Content>\n      <Title>Featured Projects</Title>\n\n      <Carousel\n        afterChange={onChange}\n        arrows={true}\n        nextArrow={<img src={ArrowLeftCircle} alt=\"prev\" />}\n        prevArrow={<img src={ArrowRightCircle} alt=\"next\" />}\n        dots={{ className: \"carousel-dots\" }}\n        slidesToShow={isMobile ? 1 : 3}\n        slidesToScroll={isMobile ? 1 : 3}\n      >\n        {data?.nftcontracts?.map((item: any) => (\n          <div key={item.id}>\n            <div style={{ padding: \"0 13px\" }}>\n              <DefauldCardPage\n                item={item}\n                ImageSize={290}\n                height={461}\n              ></DefauldCardPage>\n            </div>\n          </div>\n        ))}\n      </Carousel>\n      <LaunchpadWrap>\n        <ButtonDefault\n          onClick={() => {\n            console.log(\"lanchpad\");\n          }}\n        >\n          Launchpad\n        </ButtonDefault>\n      </LaunchpadWrap>\n    </Content>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/home-fast.e80a8e7c.svg\";","export default __webpack_public_path__ + \"static/media/home-private.2a0afdeb.svg\";","export default __webpack_public_path__ + \"static/media/home-sacure.384a609d.svg\";","export default __webpack_public_path__ + \"static/media/home-total.aaf94b42.svg\";","import \"./index.less\";\n\nimport { Image, List } from \"antd\";\nimport HomeFast from \"assets/images/home-fast.svg\";\nimport HomePrivate from \"assets/images/home-private.svg\";\nimport HomeSacure from \"assets/images/home-sacure.svg\";\nimport HomeTotal from \"assets/images/home-total.svg\";\nimport styled from \"styled-components\";\n\nconst ListWrap = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport default function PrivatePage() {\n  const data = [\n    {\n      Avatar: HomeTotal,\n      title: \"Total\",\n      description:\n        \"Collection of popular NFTs on the whole network，horizontally expand more NFTs on EVM chains and vertically deepen NFT revenue channels.\",\n    },\n    {\n      Avatar: HomeFast,\n      title: \"Fast\",\n      description:\n        \"Findora will provide Hitall with enterprise-grade privacy technology and strong liquidity assets to ensure the NFT transactions with low latency and high concurrency.\",\n    },\n    {\n      Avatar: HomePrivate,\n      title: \"Private\",\n      description: `Hitall will integrate Findora's ZK-rollup technology and ZK-didvoucher system to protect on-chain NFT assets fully privatized or selectively disclosed.`,\n    },\n    {\n      Avatar: HomeSacure,\n      title: \"Secure\",\n      description: `Users on Hitall can complete sales, purchases and transactions on the findora chain by themselves without revealing sensitive information.\n      `,\n    },\n  ];\n\n  return (\n    <ListWrap className=\"private-list\">\n      <List\n        grid={{\n          gutter: 56,\n          xs: 1,\n          sm: 2,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          xxl: 4,\n        }}\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Image src={item.Avatar} />}\n              title={item.title}\n              description={item.description}\n            />\n          </List.Item>\n        )}\n      />\n    </ListWrap>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/rewards.82348705.svg\";","import { Col, Row, Typography } from \"antd\";\nimport RewardsImage from \"assets/images/rewards.svg\";\nimport { Content } from \"components/Content\";\nconst { Title, Paragraph } = Typography;\n\nexport default function RewardsPage() {\n  return (\n    <Content>\n      <Row align=\"middle\" justify=\"center\">\n        <Col span={12} xl={12} lg={24} xs={24}>\n          <Typography style={{ float: \"right\" }}>\n            <Title>NFT REWARDS</Title>\n            <Paragraph>\n              {`Each NFT collection has it's own unique utilities but with\n              anything Hitall.io does, you enjoy privilliges with our fancy\n              rewards,such as transaction,mining,auction and airdrop. We\n              consistently provide with the benefits that NFT holders.`}\n            </Paragraph>\n          </Typography>\n        </Col>\n        <Col span={12} xl={12} lg={24} xs={24}>\n          <img width={\"100%\"} src={RewardsImage} alt=\"\" />\n        </Col>\n      </Row>\n    </Content>\n  );\n}\n","import { Avatar, List, Space } from \"antd\";\nimport { ButtonDefault } from \"components/Button\";\nimport { Content } from \"components/Content\";\nimport styled from \"styled-components\";\n\nconst Title = styled.div`\n  padding: 50px 0;\n  text-align: center;\n  font-weight: 600;\n  font-size: 40px;\n`;\nconst RowBetween = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Rank = styled.div`\n  font-weight: 600;\n  font-size: 18px;\n`;\nconst ThickText = styled.div`\n  font-weight: 600;\n  font-size: 18px;\n`;\nconst ThinText = styled.div`\n  font-size: 14px;\n  opacity: ${(props) => (props.color ? 1 : 0.6)};\n  color: ${(props) => (props.color ? props.color : \"#000\")};\n`;\n\nconst HandleButton = styled.div`\n  text-align: center;\n  padding: 70px 0;\n`;\n\nconst data = [\n  {\n    title: \"Title 1\",\n  },\n  {\n    title: \"Title 2\",\n  },\n  {\n    title: \"Title 3\",\n  },\n  {\n    title: \"Title 4\",\n  },\n  {\n    title: \"Title 5\",\n  },\n  {\n    title: \"Title 6\",\n  },\n];\n\nexport default function TopCollectionsPage() {\n  // const { data } = useQuery(FeaturedGql);\n  return (\n    <Content>\n      <Title>Top Collections Today</Title>\n      <List\n        style={{ padding: \"37.5px\" }}\n        dataSource={data || []}\n        grid={{\n          gutter: 75,\n          xs: 1,\n          sm: 2,\n          md: 2,\n          lg: 2,\n          xl: 3,\n          xxl: 3,\n        }}\n        renderItem={(item, index) => (\n          <List.Item key={index}>\n            <List.Item.Meta\n              avatar={\n                <Space size={20}>\n                  <Rank>1</Rank>\n                  <Avatar size={54} src={\"item\"} />\n                </Space>\n              }\n              title={\n                <RowBetween>\n                  <ThickText>{\"item\"}</ThickText>\n                  <ThickText>{\"item\"}</ThickText>\n                </RowBetween>\n              }\n              description={\n                <RowBetween>\n                  <ThinText>dd</ThinText>\n                  <ThinText color=\"red\">cc</ThinText>\n                </RowBetween>\n              }\n            />\n          </List.Item>\n        )}\n      />\n      <HandleButton>\n        <ButtonDefault>Rankings</ButtonDefault>\n      </HandleButton>\n    </Content>\n  );\n}\n","import Banner from \"components/Banner\";\nimport CooperationPage from \"components/Cooperation/Cooperation\";\nimport Featured from \"components/Featured\";\nimport Private from \"components/Private\";\nimport Rewards from \"components/Rewards\";\nimport TopCollections from \"components/TopCollections\";\n\nfunction HomaPage() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Banner />\n        <Private />\n        <Featured />\n        <TopCollections />\n        <Rewards />\n        <CooperationPage />\n        <div>测试一下</div>\n        {/* <NetworkCard></NetworkCard> */}\n        {/* <Button type=\"primary\">type=\"primary\"</Button> */}\n        {/* <div>{JSON.stringify(data, null, 2)}</div> */}\n        {/* 我这就是测试用的 */}\n        {/* <div>loading: {loading} </div> */}\n        {/* <div>error:{error}</div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default HomaPage;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\n\nimport ExplorePage from \"./Explore\";\nimport HomaPage from \"./Home\";\n// const { Header, Footer, Sider, Content } = Layout;\n\nconst client = new ApolloClient({\n  uri: \"https://graph.fairyswap.finance/subgraphs/name/findora/nft\",\n  cache: new InMemoryCache(),\n});\n\nexport default function RoutesPage() {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Suspense fallback={<p>loading</p>}>\n          <Routes>\n            <Route path=\"/\" element={<HomaPage />} />\n            <Route path=\"/Explore\" element={<ExplorePage />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            {/* <Route path=\"/\" element={<HomaPage />} /> */}\n            {/* <Route path=\"/\" element={<Explore />} /> */}\n          </Routes>\n        </Suspense>\n      </ApolloProvider>\n    </div>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { SupportedChainId } from \"../../constants/chains\";\n\nexport enum ApplicationModal {\n  ADDRESS_CLAIM,\n  BLOCKED_ACCOUNT,\n  DELEGATE,\n  CLAIM_POPUP,\n  MENU,\n  NETWORK_SELECTOR,\n  POOL_OVERVIEW_OPTIONS,\n  PRIVACY_POLICY,\n  SELF_CLAIM,\n  SETTINGS,\n  WALLET,\n  QUEUE,\n  EXECUTE,\n}\n//TODO 看需求在决定要不要\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string;\n      };\n    }\n  | {\n      failedSwitchNetwork: SupportedChainId;\n    };\n\n//下拉列表\ntype PopupList = Array<{\n  key: string;\n  show: boolean;\n  content: PopupContent;\n  removeAfterMs: number | null;\n}>;\n\nexport interface ApplicationState {\n  readonly chainId: number | null;\n  readonly openModal: ApplicationModal | null;\n  readonly popupList: PopupList;\n}\nconst initialState: ApplicationState = {\n  chainId: null,\n  openModal: null,\n  popupList: [],\n};\n\nconst applicationSlice = createSlice({\n  name: \"application\",\n  initialState,\n  reducers: {\n    updateChainId(state, action) {\n      const { chainId } = action.payload;\n      state.chainId = chainId;\n    },\n    setOpenModal(state, action) {\n      state.openModal = action.payload;\n    },\n    // addPopup(\n    //   state,\n    //   { payload: { content, key, removeAfterMs = DEFAULT_TXN_DISMISS_MS } }\n    // ) {\n    //   state.popupList = (\n    //     key\n    //       ? state.popupList.filter((popup) => popup.key !== key)\n    //       : state.popupList\n    //   ).concat([\n    //     {\n    //       key: key || nanoid(),\n    //       show: true,\n    //       content,\n    //       removeAfterMs,\n    //     },\n    //   ]);\n    // },\n    // removePopup(state, { payload: { key } }) {\n    //   state.popupList.forEach((p) => {\n    //     if (p.key === key) {\n    //       p.show = false;\n    //     }\n    //   });\n    // },\n  },\n});\nexport const { updateChainId, setOpenModal } = applicationSlice.actions;\n\nexport default applicationSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>(\"global/updateVersion\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>(\"global/updateVersion\");\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { updateVersion } from \"../global/actions\";\nimport { TransactionDetails } from \"./types\";\n\nconst now = () => new Date().getTime();\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails;\n  };\n}\nexport const initialState: TransactionState = {};\n\nconst transactionSlice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    addTransaction(transactions, { payload: { chainId, from, hash, info } }) {\n      if (transactions[chainId]?.[hash]) {\n        throw Error(\"Attempted to add existing transaction.\");\n      }\n      const txs = transactions[chainId] ?? {};\n      txs[hash] = { hash, info, from, addedTime: now() };\n      transactions[chainId] = txs;\n    },\n    clearAllTransactions(transactions, { payload: { chainId } }) {\n      if (!transactions[chainId]) return;\n      transactions[chainId] = {};\n    },\n    checkedTransaction(\n      transactions,\n      { payload: { chainId, hash, blockNumber } }\n    ) {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber;\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(\n          blockNumber,\n          tx.lastCheckedBlockNumber\n        );\n      }\n    },\n    //完成交易\n    finalizeTransaction(transactions, { payload: { hash, chainId, receipt } }) {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      tx.receipt = receipt;\n      tx.confirmedTime = now();\n    },\n  },\n  // 外减速器\n  extraReducers: (builder) => {\n    builder.addCase(updateVersion, (transactions) => {\n      // in case there are any transactions in the store with the old format, remove them\n      Object.keys(transactions).forEach((chainId) => {\n        const chainTransactions = transactions[chainId as unknown as number];\n        Object.keys(chainTransactions).forEach((hash) => {\n          if (!(\"info\" in chainTransactions[hash])) {\n            // clear old transactions that don't have the right format\n            delete chainTransactions[hash];\n          }\n        });\n      });\n    });\n  },\n});\nexport const {\n  addTransaction,\n  clearAllTransactions,\n  checkedTransaction,\n  finalizeTransaction,\n} = transactionSlice.actions;\nexport default transactionSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query/react\";\n\nimport { updateVersion } from \"../global/actions\";\nimport application from \"./application/reducer\";\nimport connection from \"./connection/reducer\";\nimport transactions from \"./transactions/reducer\";\nimport user from \"./user/reducer\";\n\nconst store = configureStore({\n  reducer: {\n    user,\n    transactions,\n    connection,\n    application,\n  },\n});\nstore.dispatch(updateVersion());\n\nsetupListeners(store.dispatch);\n\nexport default store;\n\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import \"./index.css\";\n\nimport WebLayout from \"components/Layout\";\nimport Web3Provider from \"components/Web3Provider\";\nimport WebConfigProvider from \"components/WebConfigProvider\";\nimport React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport RoutesPage from \"./pages/RoutesPage\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./state\";\n\nconst container = document.getElementById(\"root\") as HTMLElement;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Web3Provider>\n          <WebConfigProvider>\n            <WebLayout>\n              <RoutesPage />\n            </WebLayout>\n          </WebConfigProvider>\n        </Web3Provider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}